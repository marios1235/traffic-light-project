;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 7/31/2023 8:25:17 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x288F      	GOTO       143
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00C6      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00C7      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A3      	MOVWF      35
0x000D	0x087B      	MOVF       R11, 0
0x000E	0x00A2      	MOVWF      34
0x000F	0x087C      	MOVF       R12, 0
0x0010	0x00A1      	MOVWF      33
0x0011	0x087D      	MOVF       R13, 0
0x0012	0x00A0      	MOVWF      32
;Traffic.c,10 :: 		void interrupt()
;Traffic.c,12 :: 		if (intf_bit == 1) //flag is on when interrupt is done
0x0013	0x1C8B      	BTFSS      INTF_bit, BitPos(INTF_bit+0)
0x0014	0x2816      	GOTO       L_interrupt0
;Traffic.c,14 :: 		intf_bit =0;
0x0015	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
;Traffic.c,17 :: 		}
L_interrupt0:
;Traffic.c,18 :: 		if (counter ==0) //first toggle
0x0016	0x3000      	MOVLW      0
0x0017	0x0625      	XORWF      _counter+1, 0
0x0018	0x1D03      	BTFSS      STATUS, 2
0x0019	0x281C      	GOTO       L__interrupt35
0x001A	0x3000      	MOVLW      0
0x001B	0x0624      	XORWF      _counter, 0
L__interrupt35:
0x001C	0x1D03      	BTFSS      STATUS, 2
0x001D	0x2820      	GOTO       L_interrupt1
;Traffic.c,20 :: 		ledredsouth =1;
0x001E	0x1588      	BSF        PORTD, 3
;Traffic.c,21 :: 		ledgreenwest = 1;
0x001F	0x1508      	BSF        PORTD, 2
;Traffic.c,23 :: 		}
L_interrupt1:
;Traffic.c,24 :: 		if (counter ==1) //second toggle
0x0020	0x3000      	MOVLW      0
0x0021	0x0625      	XORWF      _counter+1, 0
0x0022	0x1D03      	BTFSS      STATUS, 2
0x0023	0x2826      	GOTO       L__interrupt36
0x0024	0x3001      	MOVLW      1
0x0025	0x0624      	XORWF      _counter, 0
L__interrupt36:
0x0026	0x1D03      	BTFSS      STATUS, 2
0x0027	0x283B      	GOTO       L_interrupt2
;Traffic.c,26 :: 		ledredsouth =0;
0x0028	0x1188      	BCF        PORTD, 3
;Traffic.c,27 :: 		ledgreenwest = 0;
0x0029	0x1108      	BCF        PORTD, 2
;Traffic.c,28 :: 		ledyellowsouth =1;
0x002A	0x1608      	BSF        PORTD, 4
;Traffic.c,29 :: 		ledyellowwest =1;
0x002B	0x1488      	BSF        PORTD, 1
;Traffic.c,30 :: 		delay_ms(3000);
0x002C	0x301F      	MOVLW      31
0x002D	0x00FB      	MOVWF      R11
0x002E	0x3071      	MOVLW      113
0x002F	0x00FC      	MOVWF      R12
0x0030	0x301E      	MOVLW      30
0x0031	0x00FD      	MOVWF      R13
L_interrupt3:
0x0032	0x0BFD      	DECFSZ     R13, 1
0x0033	0x2832      	GOTO       L_interrupt3
0x0034	0x0BFC      	DECFSZ     R12, 1
0x0035	0x2832      	GOTO       L_interrupt3
0x0036	0x0BFB      	DECFSZ     R11, 1
0x0037	0x2832      	GOTO       L_interrupt3
0x0038	0x0000      	NOP
;Traffic.c,31 :: 		ledyellowsouth =0;
0x0039	0x1208      	BCF        PORTD, 4
;Traffic.c,32 :: 		ledyellowwest =0;
0x003A	0x1088      	BCF        PORTD, 1
;Traffic.c,34 :: 		}
L_interrupt2:
;Traffic.c,35 :: 		if (counter ==2)  //third toggle
0x003B	0x3000      	MOVLW      0
0x003C	0x0625      	XORWF      _counter+1, 0
0x003D	0x1D03      	BTFSS      STATUS, 2
0x003E	0x2841      	GOTO       L__interrupt37
0x003F	0x3002      	MOVLW      2
0x0040	0x0624      	XORWF      _counter, 0
L__interrupt37:
0x0041	0x1D03      	BTFSS      STATUS, 2
0x0042	0x2845      	GOTO       L_interrupt4
;Traffic.c,37 :: 		ledredwest =1;
0x0043	0x1408      	BSF        PORTD, 0
;Traffic.c,38 :: 		ledgreensouth =1;
0x0044	0x1688      	BSF        PORTD, 5
;Traffic.c,40 :: 		}
L_interrupt4:
;Traffic.c,41 :: 		if (counter ==3)   //forth toggle
0x0045	0x3000      	MOVLW      0
0x0046	0x0625      	XORWF      _counter+1, 0
0x0047	0x1D03      	BTFSS      STATUS, 2
0x0048	0x284B      	GOTO       L__interrupt38
0x0049	0x3003      	MOVLW      3
0x004A	0x0624      	XORWF      _counter, 0
L__interrupt38:
0x004B	0x1D03      	BTFSS      STATUS, 2
0x004C	0x2860      	GOTO       L_interrupt5
;Traffic.c,43 :: 		ledredwest =0;
0x004D	0x1008      	BCF        PORTD, 0
;Traffic.c,44 :: 		ledgreensouth =0;
0x004E	0x1288      	BCF        PORTD, 5
;Traffic.c,46 :: 		ledyellowsouth =1;
0x004F	0x1608      	BSF        PORTD, 4
;Traffic.c,47 :: 		ledyellowwest =1;
0x0050	0x1488      	BSF        PORTD, 1
;Traffic.c,49 :: 		delay_ms(3000);
0x0051	0x301F      	MOVLW      31
0x0052	0x00FB      	MOVWF      R11
0x0053	0x3071      	MOVLW      113
0x0054	0x00FC      	MOVWF      R12
0x0055	0x301E      	MOVLW      30
0x0056	0x00FD      	MOVWF      R13
L_interrupt6:
0x0057	0x0BFD      	DECFSZ     R13, 1
0x0058	0x2857      	GOTO       L_interrupt6
0x0059	0x0BFC      	DECFSZ     R12, 1
0x005A	0x2857      	GOTO       L_interrupt6
0x005B	0x0BFB      	DECFSZ     R11, 1
0x005C	0x2857      	GOTO       L_interrupt6
0x005D	0x0000      	NOP
;Traffic.c,51 :: 		ledyellowsouth =0;
0x005E	0x1208      	BCF        PORTD, 4
;Traffic.c,52 :: 		ledyellowwest =0;
0x005F	0x1088      	BCF        PORTD, 1
;Traffic.c,53 :: 		}
L_interrupt5:
;Traffic.c,54 :: 		counter++;
0x0060	0x0AA4      	INCF       _counter, 1
0x0061	0x1903      	BTFSC      STATUS, 2
0x0062	0x0AA5      	INCF       _counter+1, 1
;Traffic.c,55 :: 		if (counter ==4)  //return to original after 4 toggles
0x0063	0x3000      	MOVLW      0
0x0064	0x0625      	XORWF      _counter+1, 0
0x0065	0x1D03      	BTFSS      STATUS, 2
0x0066	0x2869      	GOTO       L__interrupt39
0x0067	0x3004      	MOVLW      4
0x0068	0x0624      	XORWF      _counter, 0
L__interrupt39:
0x0069	0x1D03      	BTFSS      STATUS, 2
0x006A	0x286D      	GOTO       L_interrupt7
;Traffic.c,57 :: 		counter =0;   //return the counter to original
0x006B	0x01A4      	CLRF       _counter
0x006C	0x01A5      	CLRF       _counter+1
;Traffic.c,58 :: 		}
L_interrupt7:
;Traffic.c,64 :: 		}
L_end_interrupt:
L__interrupt34:
0x006D	0x0823      	MOVF       35, 0
0x006E	0x00F0      	MOVWF      R0
0x006F	0x0822      	MOVF       34, 0
0x0070	0x00FB      	MOVWF      R11
0x0071	0x0821      	MOVF       33, 0
0x0072	0x00FC      	MOVWF      R12
0x0073	0x0820      	MOVF       32, 0
0x0074	0x00FD      	MOVWF      R13
0x0075	0x0847      	MOVF       ___savePCLATH, 0
0x0076	0x008A      	MOVWF      PCLATH
0x0077	0x0E46      	SWAPF      ___saveSTATUS, 0
0x0078	0x0083      	MOVWF      STATUS
0x0079	0x0EFF      	SWAPF      R15, 1
0x007A	0x0E7F      	SWAPF      R15, 0
0x007B	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x007C	0x1283      	BCF        STATUS, 5
0x007D	0x1303      	BCF        STATUS, 6
0x007E	0x083F      	MOVF       ___DoICPAddr+1, 0
0x007F	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0080	0x083E      	MOVF       ___DoICPAddr, 0
0x0081	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0082	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0083	0x207C      	CALL       _____DoICP
0x0084	0x118A      	BCF        PCLATH, 3
0x0085	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0086	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0087	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0088	0x0ABE      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0089	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x008A	0x0ABF      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x008B	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x008C	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x008D	0x2883      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x008E	0x0008      	RETURN
; end of ___CC2DW
_main:
0x008F	0x1283      	BCF        STATUS, 5
0x0090	0x1303      	BCF        STATUS, 6
0x0091	0x01A4      	CLRF       _counter
0x0092	0x01A5      	CLRF       37
0x0093	0x01A6      	CLRF       _segment
0x0094	0x3001      	MOVLW      1
0x0095	0x00A7      	MOVWF      39
0x0096	0x3002      	MOVLW      2
0x0097	0x00A8      	MOVWF      40
0x0098	0x3003      	MOVLW      3
0x0099	0x00A9      	MOVWF      41
0x009A	0x3004      	MOVLW      4
0x009B	0x00AA      	MOVWF      42
0x009C	0x3005      	MOVLW      5
0x009D	0x00AB      	MOVWF      43
0x009E	0x3006      	MOVLW      6
0x009F	0x00AC      	MOVWF      44
0x00A0	0x3007      	MOVLW      7
0x00A1	0x00AD      	MOVWF      45
0x00A2	0x3008      	MOVLW      8
0x00A3	0x00AE      	MOVWF      46
0x00A4	0x3009      	MOVLW      9
0x00A5	0x00AF      	MOVWF      47
0x00A6	0x3010      	MOVLW      16
0x00A7	0x00B0      	MOVWF      48
0x00A8	0x3011      	MOVLW      17
0x00A9	0x00B1      	MOVWF      49
0x00AA	0x3012      	MOVLW      18
0x00AB	0x00B2      	MOVWF      50
0x00AC	0x3013      	MOVLW      19
0x00AD	0x00B3      	MOVWF      51
0x00AE	0x3014      	MOVLW      20
0x00AF	0x00B4      	MOVWF      52
0x00B0	0x3015      	MOVLW      21
0x00B1	0x00B5      	MOVWF      53
0x00B2	0x3016      	MOVLW      22
0x00B3	0x00B6      	MOVWF      54
0x00B4	0x3017      	MOVLW      23
0x00B5	0x00B7      	MOVWF      55
0x00B6	0x3018      	MOVLW      24
0x00B7	0x00B8      	MOVWF      56
0x00B8	0x3019      	MOVLW      25
0x00B9	0x00B9      	MOVWF      57
0x00BA	0x3020      	MOVLW      32
0x00BB	0x00BA      	MOVWF      58
0x00BC	0x3021      	MOVLW      33
0x00BD	0x00BB      	MOVWF      59
0x00BE	0x3022      	MOVLW      34
0x00BF	0x00BC      	MOVWF      60
0x00C0	0x3023      	MOVLW      35
0x00C1	0x00BD      	MOVWF      61
;Traffic.c,65 :: 		void main() {
;Traffic.c,66 :: 		adcon1 = 7;
0x00C2	0x3007      	MOVLW      7
0x00C3	0x1683      	BSF        STATUS, 5
0x00C4	0x009F      	MOVWF      ADCON1
;Traffic.c,68 :: 		trisd = 0;    //define leds port as outputs
0x00C5	0x0188      	CLRF       TRISD
;Traffic.c,69 :: 		portd = 0;    //define leds are off at first
0x00C6	0x1283      	BCF        STATUS, 5
0x00C7	0x0188      	CLRF       PORTD
;Traffic.c,71 :: 		trisc = 0;    //port c as output for 7 segments
0x00C8	0x1683      	BSF        STATUS, 5
0x00C9	0x0187      	CLRF       TRISC
;Traffic.c,72 :: 		portc = 0;    // 7 segments shows 0 at the first
0x00CA	0x1283      	BCF        STATUS, 5
0x00CB	0x0187      	CLRF       PORTC
;Traffic.c,74 :: 		trisb = 1;    //first pin of portb is input
0x00CC	0x3001      	MOVLW      1
0x00CD	0x1683      	BSF        STATUS, 5
0x00CE	0x0086      	MOVWF      TRISB
;Traffic.c,75 :: 		portb =255 ;  //portb is all 1's for turning on 7 segments
0x00CF	0x30FF      	MOVLW      255
0x00D0	0x1283      	BCF        STATUS, 5
0x00D1	0x0086      	MOVWF      PORTB
;Traffic.c,77 :: 		trisa.B4 = 1;   //porta pin 4 is input
0x00D2	0x1683      	BSF        STATUS, 5
0x00D3	0x1605      	BSF        TRISA, 4
;Traffic.c,78 :: 		porta.B4 = 1; //default value is 1 power is on
0x00D4	0x1283      	BCF        STATUS, 5
0x00D5	0x1605      	BSF        PORTA, 4
;Traffic.c,80 :: 		inte_bit = 0;   //enable interrupt is disabled at first
0x00D6	0x120B      	BCF        INTE_bit, BitPos(INTE_bit+0)
;Traffic.c,81 :: 		gie_bit = 0;    //gerneral interrupt is disabled
0x00D7	0x138B      	BCF        GIE_bit, BitPos(GIE_bit+0)
;Traffic.c,82 :: 		INTEDG_bit = 0;  //inturrupt at falling edges
0x00D8	0x1683      	BSF        STATUS, 5
0x00D9	0x1301      	BCF        INTEDG_bit, BitPos(INTEDG_bit+0)
;Traffic.c,83 :: 		loop:    //from this choosing the state (auto/manual)
___main_loop:
;Traffic.c,84 :: 		while(porta.B4 == 1)//when port RA4 is 1 (automatic)
L_main8:
0x00DA	0x1283      	BCF        STATUS, 5
0x00DB	0x1E05      	BTFSS      PORTA, 4
0x00DC	0x29A2      	GOTO       L_main9
;Traffic.c,86 :: 		inte_bit = 0;
0x00DD	0x120B      	BCF        INTE_bit, BitPos(INTE_bit+0)
;Traffic.c,87 :: 		portb = 255;    //turn on all 7 segments
0x00DE	0x30FF      	MOVLW      255
0x00DF	0x0086      	MOVWF      PORTB
;Traffic.c,88 :: 		portd = 0;      // leds are off at first
0x00E0	0x0188      	CLRF       PORTD
;Traffic.c,89 :: 		for (i = 23 ; i>=0 ; i--) //23 sec for red south
0x00E1	0x3017      	MOVLW      23
0x00E2	0x00C0      	MOVWF      _i
0x00E3	0x3000      	MOVLW      0
0x00E4	0x00C1      	MOVWF      _i+1
L_main10:
0x00E5	0x3080      	MOVLW      128
0x00E6	0x0641      	XORWF      _i+1, 0
0x00E7	0x00F0      	MOVWF      R0
0x00E8	0x3080      	MOVLW      128
0x00E9	0x0270      	SUBWF      R0, 0
0x00EA	0x1D03      	BTFSS      STATUS, 2
0x00EB	0x28EE      	GOTO       L__main41
0x00EC	0x3000      	MOVLW      0
0x00ED	0x0240      	SUBWF      _i, 0
L__main41:
0x00EE	0x1C03      	BTFSS      STATUS, 0
0x00EF	0x292C      	GOTO       L_main11
;Traffic.c,91 :: 		if (porta.B4 ==0) //if switch is changed
0x00F0	0x1A05      	BTFSC      PORTA, 4
0x00F1	0x28F3      	GOTO       L_main13
;Traffic.c,92 :: 		break;  //automatic changed to manual
0x00F2	0x292C      	GOTO       L_main11
L_main13:
;Traffic.c,93 :: 		portc = segment[i];
0x00F3	0x0840      	MOVF       _i, 0
0x00F4	0x3E26      	ADDLW      _segment
0x00F5	0x0084      	MOVWF      FSR
0x00F6	0x0800      	MOVF       INDF, 0
0x00F7	0x0087      	MOVWF      PORTC
;Traffic.c,94 :: 		if (i == 23)
0x00F8	0x3000      	MOVLW      0
0x00F9	0x0641      	XORWF      _i+1, 0
0x00FA	0x1D03      	BTFSS      STATUS, 2
0x00FB	0x28FE      	GOTO       L__main42
0x00FC	0x3017      	MOVLW      23
0x00FD	0x0640      	XORWF      _i, 0
L__main42:
0x00FE	0x1D03      	BTFSS      STATUS, 2
0x00FF	0x2902      	GOTO       L_main14
;Traffic.c,96 :: 		ledredsouth = 1;  //led on for 23 sec for red south
0x0100	0x1588      	BSF        PORTD, 3
;Traffic.c,97 :: 		ledgreenwest = 1; //green west has 20 sec from 23 sec
0x0101	0x1508      	BSF        PORTD, 2
;Traffic.c,98 :: 		}
L_main14:
;Traffic.c,100 :: 		if (i == 3)
0x0102	0x3000      	MOVLW      0
0x0103	0x0641      	XORWF      _i+1, 0
0x0104	0x1D03      	BTFSS      STATUS, 2
0x0105	0x2908      	GOTO       L__main43
0x0106	0x3003      	MOVLW      3
0x0107	0x0640      	XORWF      _i, 0
L__main43:
0x0108	0x1D03      	BTFSS      STATUS, 2
0x0109	0x290C      	GOTO       L_main15
;Traffic.c,103 :: 		ledgreenwest = 0; //after 15 sec greenwest is off
0x010A	0x1108      	BCF        PORTD, 2
;Traffic.c,104 :: 		ledyellowwest =1;  //yellow is on
0x010B	0x1488      	BSF        PORTD, 1
;Traffic.c,105 :: 		}
L_main15:
;Traffic.c,106 :: 		if (i ==0)
0x010C	0x3000      	MOVLW      0
0x010D	0x0641      	XORWF      _i+1, 0
0x010E	0x1D03      	BTFSS      STATUS, 2
0x010F	0x2912      	GOTO       L__main44
0x0110	0x3000      	MOVLW      0
0x0111	0x0640      	XORWF      _i, 0
L__main44:
0x0112	0x1D03      	BTFSS      STATUS, 2
0x0113	0x2919      	GOTO       L_main16
;Traffic.c,108 :: 		ledredsouth = 0;  //red south is off after 23 sec
0x0114	0x1188      	BCF        PORTD, 3
;Traffic.c,109 :: 		ledyellowsouth = 1;//yellowsouth is on
0x0115	0x1608      	BSF        PORTD, 4
;Traffic.c,110 :: 		ledyellowwest = 0;//same time yellow west is off
0x0116	0x1088      	BCF        PORTD, 1
;Traffic.c,111 :: 		ledgreenwest = 0; //same time green west is on
0x0117	0x1108      	BCF        PORTD, 2
;Traffic.c,112 :: 		ledredwest = 1;  //after 23 sec the redwest is on
0x0118	0x1408      	BSF        PORTD, 0
;Traffic.c,113 :: 		}
L_main16:
;Traffic.c,115 :: 		delay_ms(1000);//delay 1 second for 23 seconds
0x0119	0x300B      	MOVLW      11
0x011A	0x00FB      	MOVWF      R11
0x011B	0x3026      	MOVLW      38
0x011C	0x00FC      	MOVWF      R12
0x011D	0x305D      	MOVLW      93
0x011E	0x00FD      	MOVWF      R13
L_main17:
0x011F	0x0BFD      	DECFSZ     R13, 1
0x0120	0x291F      	GOTO       L_main17
0x0121	0x0BFC      	DECFSZ     R12, 1
0x0122	0x291F      	GOTO       L_main17
0x0123	0x0BFB      	DECFSZ     R11, 1
0x0124	0x291F      	GOTO       L_main17
0x0125	0x0000      	NOP
0x0126	0x0000      	NOP
;Traffic.c,89 :: 		for (i = 23 ; i>=0 ; i--) //23 sec for red south
0x0127	0x3001      	MOVLW      1
0x0128	0x02C0      	SUBWF      _i, 1
0x0129	0x1C03      	BTFSS      STATUS, 0
0x012A	0x03C1      	DECF       _i+1, 1
;Traffic.c,116 :: 		}
0x012B	0x28E5      	GOTO       L_main10
L_main11:
;Traffic.c,117 :: 		for (j = 15 ; j>=0;j--) //15 sec for red west
0x012C	0x300F      	MOVLW      15
0x012D	0x00C2      	MOVWF      _j
0x012E	0x3000      	MOVLW      0
0x012F	0x00C3      	MOVWF      _j+1
L_main18:
0x0130	0x3080      	MOVLW      128
0x0131	0x0643      	XORWF      _j+1, 0
0x0132	0x00F0      	MOVWF      R0
0x0133	0x3080      	MOVLW      128
0x0134	0x0270      	SUBWF      R0, 0
0x0135	0x1D03      	BTFSS      STATUS, 2
0x0136	0x2939      	GOTO       L__main45
0x0137	0x3000      	MOVLW      0
0x0138	0x0242      	SUBWF      _j, 0
L__main45:
0x0139	0x1C03      	BTFSS      STATUS, 0
0x013A	0x29A1      	GOTO       L_main19
;Traffic.c,120 :: 		portc = segment[j];
0x013B	0x0842      	MOVF       _j, 0
0x013C	0x3E26      	ADDLW      _segment
0x013D	0x0084      	MOVWF      FSR
0x013E	0x0800      	MOVF       INDF, 0
0x013F	0x0087      	MOVWF      PORTC
;Traffic.c,121 :: 		if (porta.B4 ==0)
0x0140	0x1A05      	BTFSC      PORTA, 4
0x0141	0x2943      	GOTO       L_main21
;Traffic.c,122 :: 		break;
0x0142	0x29A1      	GOTO       L_main19
L_main21:
;Traffic.c,125 :: 		if (j ==12) //after 3 seconds from the period
0x0143	0x3000      	MOVLW      0
0x0144	0x0643      	XORWF      _j+1, 0
0x0145	0x1D03      	BTFSS      STATUS, 2
0x0146	0x2949      	GOTO       L__main46
0x0147	0x300C      	MOVLW      12
0x0148	0x0642      	XORWF      _j, 0
L__main46:
0x0149	0x1D03      	BTFSS      STATUS, 2
0x014A	0x294D      	GOTO       L_main22
;Traffic.c,128 :: 		ledyellowsouth = 0;//after 3 sec yellowsouth is off
0x014B	0x1208      	BCF        PORTD, 4
;Traffic.c,129 :: 		ledgreensouth = 1; //same time greensouth is on
0x014C	0x1688      	BSF        PORTD, 5
;Traffic.c,133 :: 		}
L_main22:
;Traffic.c,135 :: 		if (j == 0) //15 seconds(redwest)12 seconds(greensouth)
0x014D	0x3000      	MOVLW      0
0x014E	0x0643      	XORWF      _j+1, 0
0x014F	0x1D03      	BTFSS      STATUS, 2
0x0150	0x2953      	GOTO       L__main47
0x0151	0x3000      	MOVLW      0
0x0152	0x0642      	XORWF      _j, 0
L__main47:
0x0153	0x1D03      	BTFSS      STATUS, 2
0x0154	0x298E      	GOTO       L_main23
;Traffic.c,137 :: 		ledgreensouth = 0;//after 12 seconds greensouth off
0x0155	0x1288      	BCF        PORTD, 5
;Traffic.c,138 :: 		ledredwest = 0;  //red west is off after 15 sec
0x0156	0x1008      	BCF        PORTD, 0
;Traffic.c,140 :: 		ledyellowwest = 1; //after 15 sec for both of them
0x0157	0x1488      	BSF        PORTD, 1
;Traffic.c,141 :: 		ledyellowsouth = 1; //yellow leds is on for 3 sec
0x0158	0x1608      	BSF        PORTD, 4
;Traffic.c,142 :: 		for (enl = 3 ; enl>=0;enl--)
0x0159	0x3003      	MOVLW      3
0x015A	0x00C4      	MOVWF      _enl
0x015B	0x3000      	MOVLW      0
0x015C	0x00C5      	MOVWF      _enl+1
L_main24:
0x015D	0x3080      	MOVLW      128
0x015E	0x0645      	XORWF      _enl+1, 0
0x015F	0x00F0      	MOVWF      R0
0x0160	0x3080      	MOVLW      128
0x0161	0x0270      	SUBWF      R0, 0
0x0162	0x1D03      	BTFSS      STATUS, 2
0x0163	0x2966      	GOTO       L__main48
0x0164	0x3000      	MOVLW      0
0x0165	0x0244      	SUBWF      _enl, 0
L__main48:
0x0166	0x1C03      	BTFSS      STATUS, 0
0x0167	0x298C      	GOTO       L_main25
;Traffic.c,144 :: 		portc = segment[enl]; //3 sec on 7 segment
0x0168	0x0844      	MOVF       _enl, 0
0x0169	0x3E26      	ADDLW      _segment
0x016A	0x0084      	MOVWF      FSR
0x016B	0x0800      	MOVF       INDF, 0
0x016C	0x0087      	MOVWF      PORTC
;Traffic.c,145 :: 		if (enl == 0)       //after 3 sec
0x016D	0x3000      	MOVLW      0
0x016E	0x0645      	XORWF      _enl+1, 0
0x016F	0x1D03      	BTFSS      STATUS, 2
0x0170	0x2973      	GOTO       L__main49
0x0171	0x3000      	MOVLW      0
0x0172	0x0644      	XORWF      _enl, 0
L__main49:
0x0173	0x1D03      	BTFSS      STATUS, 2
0x0174	0x2979      	GOTO       L_main27
;Traffic.c,147 :: 		ledyellowwest = 0; //both yellow are off
0x0175	0x1088      	BCF        PORTD, 1
;Traffic.c,148 :: 		ledyellowsouth = 0;
0x0176	0x1208      	BCF        PORTD, 4
;Traffic.c,149 :: 		ledredsouth = 1; //return to first condition
0x0177	0x1588      	BSF        PORTD, 3
;Traffic.c,150 :: 		ledgreenwest = 1;
0x0178	0x1508      	BSF        PORTD, 2
;Traffic.c,151 :: 		}
L_main27:
;Traffic.c,152 :: 		delay_ms(1000); //delay for 3 sec yellow loop
0x0179	0x300B      	MOVLW      11
0x017A	0x00FB      	MOVWF      R11
0x017B	0x3026      	MOVLW      38
0x017C	0x00FC      	MOVWF      R12
0x017D	0x305D      	MOVLW      93
0x017E	0x00FD      	MOVWF      R13
L_main28:
0x017F	0x0BFD      	DECFSZ     R13, 1
0x0180	0x297F      	GOTO       L_main28
0x0181	0x0BFC      	DECFSZ     R12, 1
0x0182	0x297F      	GOTO       L_main28
0x0183	0x0BFB      	DECFSZ     R11, 1
0x0184	0x297F      	GOTO       L_main28
0x0185	0x0000      	NOP
0x0186	0x0000      	NOP
;Traffic.c,142 :: 		for (enl = 3 ; enl>=0;enl--)
0x0187	0x3001      	MOVLW      1
0x0188	0x02C4      	SUBWF      _enl, 1
0x0189	0x1C03      	BTFSS      STATUS, 0
0x018A	0x03C5      	DECF       _enl+1, 1
;Traffic.c,155 :: 		}
0x018B	0x295D      	GOTO       L_main24
L_main25:
;Traffic.c,156 :: 		portc = segment[23]; //7 segment to 23 sec again
0x018C	0x083D      	MOVF       _segment+23, 0
0x018D	0x0087      	MOVWF      PORTC
;Traffic.c,159 :: 		}
L_main23:
;Traffic.c,162 :: 		delay_ms(1000);  //delay of 15 seconds for loop
0x018E	0x300B      	MOVLW      11
0x018F	0x00FB      	MOVWF      R11
0x0190	0x3026      	MOVLW      38
0x0191	0x00FC      	MOVWF      R12
0x0192	0x305D      	MOVLW      93
0x0193	0x00FD      	MOVWF      R13
L_main29:
0x0194	0x0BFD      	DECFSZ     R13, 1
0x0195	0x2994      	GOTO       L_main29
0x0196	0x0BFC      	DECFSZ     R12, 1
0x0197	0x2994      	GOTO       L_main29
0x0198	0x0BFB      	DECFSZ     R11, 1
0x0199	0x2994      	GOTO       L_main29
0x019A	0x0000      	NOP
0x019B	0x0000      	NOP
;Traffic.c,117 :: 		for (j = 15 ; j>=0;j--) //15 sec for red west
0x019C	0x3001      	MOVLW      1
0x019D	0x02C2      	SUBWF      _j, 1
0x019E	0x1C03      	BTFSS      STATUS, 0
0x019F	0x03C3      	DECF       _j+1, 1
;Traffic.c,163 :: 		}
0x01A0	0x2930      	GOTO       L_main18
L_main19:
;Traffic.c,165 :: 		}
0x01A1	0x28DA      	GOTO       L_main8
L_main9:
;Traffic.c,166 :: 		if (porta.B4 ==0) { //when port RA4 is 0 manual
0x01A2	0x1A05      	BTFSC      PORTA, 4
0x01A3	0x29AB      	GOTO       L_main30
;Traffic.c,167 :: 		portb = 0;       //7 segments are off
0x01A4	0x0186      	CLRF       PORTB
;Traffic.c,168 :: 		portd = 0;        //leds are off
0x01A5	0x0188      	CLRF       PORTD
;Traffic.c,169 :: 		inte_bit = 1;
0x01A6	0x160B      	BSF        INTE_bit, BitPos(INTE_bit+0)
;Traffic.c,170 :: 		gie_bit =1;
0x01A7	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;Traffic.c,171 :: 		while(porta.B4 ==0); //hold until changing to auto again
L_main31:
0x01A8	0x1A05      	BTFSC      PORTA, 4
0x01A9	0x29AB      	GOTO       L_main32
0x01AA	0x29A8      	GOTO       L_main31
L_main32:
;Traffic.c,173 :: 		}
L_main30:
;Traffic.c,174 :: 		goto loop;  //return to loop label
0x01AB	0x28DA      	GOTO       ___main_loop
;Traffic.c,185 :: 		}
L_end_main:
0x01AC	0x29AC      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [120]    _interrupt
0x007C       [7]    _____DoICP
0x0083      [12]    ___CC2DW
0x008F     [286]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000B       [0]    GIE_bit
0x000B       [0]    INTF_bit
0x000B       [0]    INTE_bit
0x0024       [2]    _counter
0x0026      [24]    _segment
0x003E       [2]    ___DoICPAddr
0x0040       [2]    _i
0x0042       [2]    _j
0x0044       [2]    _enl
0x0046       [1]    ___saveSTATUS
0x0047       [1]    ___savePCLATH
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    INTEDG_bit
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x009F       [1]    ADCON1
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  ___main_loop
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_end_interrupt
  _interrupt
  L__interrupt34
  L__interrupt35
  L__interrupt36
  L__interrupt37
  L__interrupt38
  L__interrupt39
  L_end_main
  _main
  L__main41
  L__main42
  L__main43
  L__main44
  L__main45
  L__main46
  L__main47
  L__main48
  L__main49
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  ___main_loop
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_end_interrupt
  _interrupt
  L__interrupt34
  L__interrupt35
  L__interrupt36
  L__interrupt37
  L__interrupt38
  L__interrupt39
  L_end_main
  _main
  L__main41
  L__main42
  L__main43
  L__main44
  L__main45
  L__main46
  L__main47
  L__main48
  L__main49
